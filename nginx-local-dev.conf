# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     # Logging
#     access_log /var/log/nginx/access.log;
#     error_log /var/log/nginx/error.log;

#     # HTTP server for local development
#     server {
#         listen 80;
#         server_name localhost;
        
#         # Proxy API requests to backend (localhost:3001)
#         location /api/ {
#             proxy_pass http://host.docker.internal:3001;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy file uploads to backend
#         location /uploads/ {
#             proxy_pass http://host.docker.internal:3001;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
            
#             # Upload settings
#             client_max_body_size 50M;
#         }

#         # Proxy Vite HMR websocket connections
#         location /__vite_ping {
#             proxy_pass http://host.docker.internal:3000;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy Vite HMR websocket connections (with query parameters)
#         location ~ ^/ws {
#             proxy_pass http://host.docker.internal:3000;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy Vite HMR websocket connections (root path with query)
#         location ~ ^/\?token= {
#             proxy_pass http://host.docker.internal:3000;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Proxy all other requests to frontend (localhost:3000)
#         location / {
#             proxy_pass http://host.docker.internal:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  # Optional: set a global max body if you want
  client_max_body_size 50m;

  server {
    listen 80;
    server_name localhost;

    # -------- API (uploads happen here) --------
    location /api/ {
      # Prefer service name when running under docker compose (backend:3001).
      proxy_pass http://host.docker.internal:3001;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Large/slow mobile uploads:
      client_max_body_size 50m;     # request body size limit
      client_body_timeout 300s;     # time to receive request body
      send_timeout 300s;

      # Stream request body to upstream instead of buffering everything at Nginx
      proxy_request_buffering off;

      # Give Node/Express time to read & respond
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;

      # Optional: reduce disk temp files when buffering is on elsewhere
      proxy_max_temp_file_size 0;
    }

    # -------- Static file DOWNLOADS from backend (GET /uploads/...) --------
    location /uploads/ {
      proxy_pass http://host.docker.internal:3001;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      # client_max_body_size here affects request size for PUT/POST, not download size
    }

    # -------- Frontend & Vite dev server / HMR --------
    # One block is enough if you include upgrade headers.
    location / {
      proxy_pass http://host.docker.internal:3000;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Smooth HMR / SSE
      proxy_read_timeout 300s;
      proxy_send_timeout 300s;
      proxy_buffering off;
    }
  }

  # Ensure $connection_upgrade resolves correctly
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }
}